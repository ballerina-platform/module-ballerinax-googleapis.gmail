// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/http;

listener http:Listener ep0 = new (9090, config = {host: "localhost"});

service /gmail/v1 on ep0 {
    resource function delete users/[string userId]/drafts/[string id](@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType) returns http:Ok {
        return http:OK;
    }

    resource function delete users/[string userId]/labels/[string id](@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType) returns http:Ok {
        return http:OK;
    }

    resource function delete users/[string userId]/messages/[string id](@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType) returns http:Ok {
        return http:OK;
    }

    resource function delete users/[string userId]/threads/[string id](@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType) returns http:Ok {
        return http:OK;
    }

    resource function get users/[string userId]/drafts(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, boolean? includeSpamTrash, int? maxResults, string? pageToken, string? q) returns ListDraftsResponse {
    Draft draft = {
            id: "1",
            message: {
                id: "1",
                threadId: "1",
                labelIds: ["CUSTOMER"],
                snippet: "snippet",
                historyId: "1"
            }
        };
        ListDraftsResponse response = {drafts: [draft]};
        return response;
    }

    resource function get users/[string userId]/drafts/[string id](@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, "minimal"|"full"|"raw"|"metadata"? format) returns Draft {
    return {
            id: "1",
            message: {
                id: "1",
                threadId: "1",
                labelIds: ["CUSTOMER"],
                snippet: "snippet",
                historyId: "1"
            }
        };
    }

    resource function get users/[string userId]/history(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, ("messageAdded"|"messageDeleted"|"labelAdded"|"labelRemoved")[]? historyTypes, string? labelId, int? maxResults, string? pageToken, string? startHistoryId) returns ListHistoryResponse {
    return {
            history: [
                {
                    id: "1",
                    messages: [
                        {
                            id: "1",
                            threadId: "1",
                            labelIds: ["CUSTOMER"],
                            snippet: "snippet",
                            historyId: "1"
                        }
                    ]
                }
            ],
            historyId: "1",
            nextPageToken: "nextPageToken"
        };
    }

    resource function get users/[string userId]/labels(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType) returns ListLabelsResponse {
    return {
            labels: [
                {
                    id: "1",
                    name: "CUSTOMER"
                }
            ]
        };
    }

    resource function get users/[string userId]/labels/[string id](@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType) returns Label {
   return {
            id: "1",
            name: "CUSTOMER"
        };
         }

    resource function get users/[string userId]/messages(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, boolean? includeSpamTrash, string[]? labelIds, int? maxResults, string? pageToken, string? q) returns ListMessagesResponse {
    return {
            messages: [
                {
                    id: "1",
                    threadId: "1"
                }
            ],
            nextPageToken: "nextPageToken"
        };
    }

    resource function get users/[string userId]/messages/[string id](@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, "minimal"|"full"|"raw"|"metadata"? format, string[]? metadataHeaders) returns Message {
    return {
            id: "1",
            threadId: "1",
            labelIds: ["CUSTOMER"],
            snippet: "snippet",
            historyId: "1",
            raw: ""
        };
    }

    resource function get users/[string userId]/messages/[string messageId]/attachments/[string id](@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType) returns MessagePartBody {
    return {
            attachmentId: "1",
            size: 1,
            data: "aW1hZ2U="
        };
    }

    resource function get users/[string userId]/profile(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType) returns Profile {
    return {
            emailAddress: "emailAddress",
            messagesTotal: 1,
            threadsTotal: 1,
            historyId: "1"
        };
    }

    resource function get users/[string userId]/threads(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, boolean? includeSpamTrash, string[]? labelIds, int? maxResults, string? pageToken, string? q) returns ListThreadsResponse {
    return {
            threads: [
                {
                    id: "1",
                    historyId: "1",
                    messages: [
                        {
                            id: "1",
                            threadId: "1"
                        }
                    ]
                }
            ],
            nextPageToken: "nextPageToken"
        };
    }

    resource function get users/[string userId]/threads/[string id](@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, "full"|"metadata"|"minimal"? format, string[]? metadataHeaders) returns MailThread {
    return {
            id: "1",
            historyId: "1",
            messages: [
                {
                    id: "1",
                    threadId: "1",
                    labelIds: ["CUSTOMER"],
                    snippet: "snippet"
                }
            ]
        };
    }

    resource function patch users/[string userId]/labels/[string id](@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, @http:Payload Label payload) returns Label {
    return {
            id: "1",
            name: "CUSTOMER PATCHED"
        };
    }

    resource function post users/[string userId]/drafts(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, @http:Payload Draft payload) returns DraftOk {
    return {
            body: {
                id: "1",
                message: {
                    id: "1",
                    threadId: "1"
                }
            }
        };
    }

    resource function post users/[string userId]/drafts/send(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, @http:Payload Draft payload) returns MessageOk {
    return {
            body: {
                id: "1",
                threadId: "1",
                labelIds: ["CUSTOMER"],
                snippet: "snippet",
                historyId: "1"
            }
        };
    }

    resource function post users/[string userId]/labels(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, @http:Payload Label payload) returns LabelOk {
     return {
            body: {
                id: "1",
                name: "CUSTOMER"
            }
        };
    }

    resource function post users/[string userId]/messages(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, boolean? deleted, "receivedTime"|"dateHeader"? internalDateSource, @http:Payload Message payload) returns MessageOk {
    return {
            body: {
                id: "1",
                threadId: "1",
                labelIds: ["CUSTOMER"],
                snippet: "snippet",
                historyId: "1"
            }
        };
    }

    resource function post users/[string userId]/messages/'import(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, boolean? deleted, "receivedTime"|"dateHeader"? internalDateSource, boolean? neverMarkSpam, boolean? processForCalendar, @http:Payload Message payload) returns MessageOk {
    return {
            body: {
                id: "1",
                threadId: "1",
                labelIds: ["CUSTOMER"],
                snippet: "snippet",
                historyId: "1"
            }
        };
    }

    resource function post users/[string userId]/messages/[string id]/modify(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, @http:Payload ModifyMessageRequest payload) returns MessageOk {
    return {
            body: {
                id: "1",
                threadId: "1",
                labelIds: ["CUSTOMER"],
                snippet: "snippet",
                historyId: "1"
            }
        };
    }

    resource function post users/[string userId]/messages/[string id]/trash(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType) returns MessageOk {
    return {
            body: {
                id: "1",
                threadId: "1",
                labelIds: ["CUSTOMER", "TRASH"],
                snippet: "snippet",
                historyId: "1"
            }
        };
    }

    resource function post users/[string userId]/messages/[string id]/untrash(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType) returns MessageOk {
    return {
            body: {
                id: "1",
                threadId: "1",
                labelIds: ["CUSTOMER"],
                snippet: "snippet",
                historyId: "1"
            }
        };
    }

    resource function post users/[string userId]/messages/batchDelete(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, @http:Payload BatchDeleteMessagesRequest payload) returns http:Ok {
            return http:OK;
    }

    resource function post users/[string userId]/messages/batchModify(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, @http:Payload BatchModifyMessagesRequest payload) returns http:Ok {
            return http:OK;
    }

    resource function post users/[string userId]/messages/send(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, @http:Payload Message payload) returns MessageOk {
    return {
            body: {
                id: "1",
                threadId: "1",
                labelIds: ["CUSTOMER"],
                snippet: "snippet",
                historyId: "1"
            }
        };
    }

    resource function post users/[string userId]/threads/[string id]/modify(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, @http:Payload ModifyThreadRequest payload) returns MailThreadOk {
    return {
            body: {
                id: "1",
                historyId: "1",
                messages: [
                    {
                        id: "1",
                        threadId: "1",
                        labelIds: ["CUSTOMER"],
                        snippet: "snippet"
                    }
                ]
            }
        };
    }

    resource function post users/[string userId]/threads/[string id]/trash(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType) returns MailThreadOk {
    return {
            body: {
                id: "1",
                historyId: "1",
                messages: [
                    {
                        id: "1",
                        threadId: "1",
                        labelIds: ["CUSTOMER"],
                        snippet: "snippet"
                    }
                ]
            }
        };
    }

    resource function post users/[string userId]/threads/[string id]/untrash(@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType) returns MailThreadOk {
    return {
            body: {
                id: "1",
                historyId: "1",
                messages: [
                    {
                        id: "1",
                        threadId: "1",
                        labelIds: ["CUSTOMER"],
                        snippet: "snippet"
                    }
                ]
            }
        };
    }

    resource function put users/[string userId]/drafts/[string id](@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, @http:Payload Draft payload) returns Draft {
    return {
            id: "1",
            message: {
                id: "1",
                threadId: "1",
                labelIds: ["CUSTOMER"],
                snippet: "snippet",
                historyId: "1"
            }
        };
    }

    resource function put users/[string userId]/labels/[string id](@http:Query {name: "$.xgafv"} Xgafv? xgafv, @http:Query {name: "access_token"} string? accessToken, Alt? alt, string? callback, string? fields, string? 'key, @http:Query {name: "oauth_token"} string? oauthToken, boolean? prettyPrint, string? quotaUser, @http:Query {name: "upload_protocol"} string? uploadProtocol, string? uploadType, @http:Payload Label payload) returns Label {
    return {
            id: "1",
            name: "CUSTOMER"
        };
    }
}
